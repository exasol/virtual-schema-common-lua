name: CI Build

on:
  - push

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        lua_version: [ 5.4 ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Lua ${{ matrix.lua_version }}
        uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: ${{ matrix.lua_version }}
      - name: Install LuaRocks
        uses: leafo/gh-actions-luarocks@v4
        with:
          luarocksVersion: "3.8.0"
      - name: Install Lua dependencies
        run: luarocks make --local
      - name: Run tests
        run: tools/run_tests.sh --run=ci
      - name: Run static code analysis
        run: tools/run_luacheck.sh
      - name: Create report
        run: |
          luacov -c .coverage_config.lua luacov.stats.out
          mkdir -p target/luacov-reports
          mv luacov.*.out target/luacov-reports/
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: luacov-report
          path: target/luacov-reports/*
      - name: Build API documentation
        run: tools/build_docs.sh
      - name: Upload API documentation
        uses: actions/upload-artifact@v3
        with:
          name: api-documentation
          path: target/ldoc/
          if-no-files-found: error

  ## This is a separate job because it requires running apt-get which takes > 40s.
  ## When the other job also uses apt-get this can be moved back.
  plantuml:
    strategy:
      fail-fast: true
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    name: "Build Plantuml diagrams"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Plantuml
        run: |
          sudo apt-get update -y
          sudo apt-get install -y plantuml
      - name: Build diagrams
        run: tools/build_diagrams.sh